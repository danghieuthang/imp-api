// <auto-generated />
using System;
using IMP.Infrastructure.Persistence.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace IMP.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20211204152254_V40")]
    partial class V40
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("IMP.Domain.Entities.ActivityComment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ApplicationUserId")
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<int>("MemberActivityId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId");

                    b.HasIndex("MemberActivityId");

                    b.ToTable("ActivityComments");
                });

            modelBuilder.Entity("IMP.Domain.Entities.ActivityType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.ToTable("ActivityTypes");
                });

            modelBuilder.Entity("IMP.Domain.Entities.ApplicationUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Avatar")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("BrandId")
                        .HasColumnType("int");

                    b.Property<bool?>("ChildStatus")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Gender")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Interests")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEmailVerified")
                        .HasColumnType("bit");

                    b.Property<string>("Job")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int?>("LocationId")
                        .HasColumnType("int");

                    b.Property<bool?>("MaritalStatus")
                        .HasColumnType("bit");

                    b.Property<string>("Nickname")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Pet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<bool?>("Pregnant")
                        .HasColumnType("bit");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.HasIndex("LocationId");

                    b.ToTable("ApplicationUsers");
                });

            modelBuilder.Entity("IMP.Domain.Entities.Bank", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.ToTable("Banks");
                });

            modelBuilder.Entity("IMP.Domain.Entities.Block", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BlockTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Enable")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<int?>("PageId")
                        .HasColumnType("int");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<int>("Position")
                        .HasColumnType("int");

                    b.Property<string>("Variant")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("BlockTypeId");

                    b.HasIndex("PageId");

                    b.HasIndex("ParentId");

                    b.ToTable("Blocks");
                });

            modelBuilder.Entity("IMP.Domain.Entities.BlockItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BlockId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Key")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Value")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("BlockId");

                    b.ToTable("BlockItems");
                });

            modelBuilder.Entity("IMP.Domain.Entities.BlockType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Image")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.ToTable("BlockTypes");
                });

            modelBuilder.Entity("IMP.Domain.Entities.Brand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Code")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Fanpage")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Image")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Introduction")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<bool>("IsCompany")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEmailVerified")
                        .HasColumnType("bit");

                    b.Property<string>("Job")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Phone")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Representative")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int?>("WalletId")
                        .HasColumnType("int");

                    b.Property<string>("Website")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("WalletId");

                    b.ToTable("Brands");
                });

            modelBuilder.Entity("IMP.Domain.Entities.Campaign", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AdditionalInformation")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<DateTime?>("AdvertisingDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("AnnouncingDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ApplyingDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ApprovedById")
                        .HasMaxLength(50)
                        .HasColumnType("int");

                    b.Property<int>("BrandId")
                        .HasColumnType("int");

                    b.Property<int?>("CampaignTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ClosedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<DateTime?>("EvaluatingDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Fanpage")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Hashtags")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<bool>("IsActived")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Keywords")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Note")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime?>("OpeningDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("PlatformId")
                        .HasColumnType("int");

                    b.Property<string>("ProductInformation")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("QA")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("SampleContent")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Website")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.HasIndex("CampaignTypeId");

                    b.HasIndex("CreatedById");

                    b.HasIndex("PlatformId");

                    b.ToTable("Campaigns");
                });

            modelBuilder.Entity("IMP.Domain.Entities.CampaignActivity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ActivityTypeId")
                        .HasColumnType("int");

                    b.Property<int>("CampaignId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int?>("EvidenceTypeId")
                        .HasColumnType("int");

                    b.Property<string>("HowToDo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("ResultName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("ActivityTypeId");

                    b.HasIndex("CampaignId");

                    b.HasIndex("EvidenceTypeId");

                    b.ToTable("CampaignActivities");
                });

            modelBuilder.Entity("IMP.Domain.Entities.CampaignImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CampaignId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<int>("Position")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("CampaignId");

                    b.ToTable("CampaignImages");
                });

            modelBuilder.Entity("IMP.Domain.Entities.CampaignMember", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("ActivityProgess")
                        .HasColumnType("bit");

                    b.Property<int?>("ApprovedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("ApprovedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CampaignId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CompletedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int>("InfluencerId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPayReward")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Money")
                        .HasColumnType("decimal(18,6)");

                    b.Property<string>("Note")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApprovedById");

                    b.HasIndex("CampaignId");

                    b.HasIndex("InfluencerId");

                    b.ToTable("CampaignMembers");
                });

            modelBuilder.Entity("IMP.Domain.Entities.CampaignReward", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CampaignId")
                        .HasColumnType("int");

                    b.Property<int?>("CampaignVoucherId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Currency")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDefaultReward")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,6)");

                    b.HasKey("Id");

                    b.HasIndex("CampaignId");

                    b.HasIndex("CampaignVoucherId");

                    b.ToTable("CampaignRewards");
                });

            modelBuilder.Entity("IMP.Domain.Entities.CampaignType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Image")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("IsActived")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("CampaignTypes");
                });

            modelBuilder.Entity("IMP.Domain.Entities.CampaignVoucher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CampaignId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsBestInfluencerReward")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDefaultReward")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<int>("PercentForInfluencer")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int?>("QuantityForInfluencer")
                        .HasColumnType("int");

                    b.Property<int>("QuantityUsed")
                        .HasColumnType("int");

                    b.Property<int>("VoucherId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CampaignId");

                    b.HasIndex("VoucherId");

                    b.ToTable("CampaignVouchers");
                });

            modelBuilder.Entity("IMP.Domain.Entities.Complaint", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CampaignId")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int>("FeedbackUserId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProcessingStatus")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CampaignId");

                    b.HasIndex("FeedbackUserId");

                    b.HasIndex("UserId");

                    b.ToTable("Complaints");
                });

            modelBuilder.Entity("IMP.Domain.Entities.Evidence", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("EvidenceTypeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<int>("MemberActivityId")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("EvidenceTypeId");

                    b.HasIndex("MemberActivityId");

                    b.ToTable("Evidences");
                });

            modelBuilder.Entity("IMP.Domain.Entities.EvidenceType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.ToTable("EvidenceTypes");
                });

            modelBuilder.Entity("IMP.Domain.Entities.InfluencerConfiguration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AgeFrom")
                        .HasColumnType("int");

                    b.Property<int?>("AgeTo")
                        .HasColumnType("int");

                    b.Property<int>("CampaignId")
                        .HasColumnType("int");

                    b.Property<bool?>("ChildStatus")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("Interests")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Jobs")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<int>("LevelId")
                        .HasColumnType("int");

                    b.Property<bool?>("MaritalStatus")
                        .HasColumnType("bit");

                    b.Property<int>("NumberOfInfluencer")
                        .HasColumnType("int");

                    b.Property<string>("OtherCondition")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<int?>("PlatformId")
                        .HasColumnType("int");

                    b.Property<bool?>("Pregnant")
                        .HasColumnType("bit");

                    b.Property<bool>("UnlimitedAge")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("CampaignId")
                        .IsUnique();

                    b.HasIndex("LevelId");

                    b.HasIndex("PlatformId");

                    b.ToTable("InfluencerConfigurations");
                });

            modelBuilder.Entity("IMP.Domain.Entities.InfluencerConfigurationLocation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int>("InfluencerConfigurationId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<int>("LocationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("InfluencerConfigurationId");

                    b.HasIndex("LocationId");

                    b.ToTable("InfluencerConfigurationLocations");
                });

            modelBuilder.Entity("IMP.Domain.Entities.InfluencerPlatform", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Avatar")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Category")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int>("Follower")
                        .HasColumnType("int");

                    b.Property<string>("Hashtag")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("InfluencerId")
                        .HasColumnType("int");

                    b.Property<string>("Interests")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVerified")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<int>("PlatformId")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("InfluencerId");

                    b.HasIndex("PlatformId");

                    b.ToTable("InfluencerPlatforms");
                });

            modelBuilder.Entity("IMP.Domain.Entities.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Level")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<string>("Slug")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("IMP.Domain.Entities.MemberActivity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CampaignActivityId")
                        .HasColumnType("int");

                    b.Property<int>("CampaignMemberId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CampaignActivityId");

                    b.HasIndex("CampaignMemberId");

                    b.ToTable("MemberActivities");
                });

            modelBuilder.Entity("IMP.Domain.Entities.Notification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ApplicationUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRead")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Message")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("RedirectId")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("IMP.Domain.Entities.Otp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ApplicationUserId")
                        .HasColumnType("int");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ExpiredTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId");

                    b.ToTable("Otps");
                });

            modelBuilder.Entity("IMP.Domain.Entities.Page", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Background")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("BackgroundType")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("BioLink")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("FontFamily")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<double>("FontSize")
                        .HasColumnType("float");

                    b.Property<int>("InfluencerId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("TextColor")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("InfluencerId");

                    b.ToTable("Pages");
                });

            modelBuilder.Entity("IMP.Domain.Entities.PaymentInfor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("AccountNumber")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int?>("BankId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BankId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("PaymentInfors");
                });

            modelBuilder.Entity("IMP.Domain.Entities.Platform", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Image")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.ToTable("Platforms");
                });

            modelBuilder.Entity("IMP.Domain.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CampaignId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Currency")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsReward")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,6)");

                    b.HasKey("Id");

                    b.HasIndex("CampaignId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("IMP.Domain.Entities.RankLevel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("Score")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("RankLevels");
                });

            modelBuilder.Entity("IMP.Domain.Entities.Ranking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int>("InfluencerId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<int>("RankLevelId")
                        .HasColumnType("int");

                    b.Property<int>("Score")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("InfluencerId")
                        .IsUnique();

                    b.HasIndex("RankLevelId");

                    b.ToTable("Rankings");
                });

            modelBuilder.Entity("IMP.Domain.Entities.TargetConfiguration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AgeFrom")
                        .HasColumnType("int");

                    b.Property<int?>("AgeTo")
                        .HasColumnType("int");

                    b.Property<int>("CampaignId")
                        .HasColumnType("int");

                    b.Property<bool?>("ChildStatus")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("Interests")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Jobs")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("MaritalStatus")
                        .HasColumnType("bit");

                    b.Property<bool?>("Pregnant")
                        .HasColumnType("bit");

                    b.Property<string>("Purpose")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<bool>("UnlimitedAge")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("CampaignId")
                        .IsUnique();

                    b.ToTable("TargetCustomerConfigurations");
                });

            modelBuilder.Entity("IMP.Domain.Entities.TargetConfigurationLocation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<int>("LocationId")
                        .HasColumnType("int");

                    b.Property<int>("TargetConfigurationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.HasIndex("TargetConfigurationId");

                    b.ToTable("TargetConfigurationLocations");
                });

            modelBuilder.Entity("IMP.Domain.Entities.Voucher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Action")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("BrandId")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Condition")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("DiscountProducts")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<decimal>("DiscountValue")
                        .HasColumnType("decimal(18,6)");

                    b.Property<int>("DiscountValueType")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FromDate")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan?>("FromTime")
                        .HasColumnType("time(7)");

                    b.Property<string>("Image")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<bool>("OnlyforCustomer")
                        .HasColumnType("bit");

                    b.Property<bool>("OnlyforInfluencer")
                        .HasColumnType("bit");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("QuantityUsed")
                        .HasColumnType("int");

                    b.Property<string>("Target")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Thumnail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime?>("ToDate")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan?>("ToTime")
                        .HasColumnType("time(7)");

                    b.Property<bool>("UseForReward")
                        .HasColumnType("bit");

                    b.Property<string>("VoucherName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.ToTable("Voucher");
                });

            modelBuilder.Entity("IMP.Domain.Entities.VoucherCode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CampaignMemberId")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("QuantityUsed")
                        .HasColumnType("int");

                    b.Property<int>("VoucherId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CampaignMemberId");

                    b.HasIndex("VoucherId");

                    b.ToTable("VoucherCodes");
                });

            modelBuilder.Entity("IMP.Domain.Entities.VoucherCodeApplicationUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ApplicationUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<int>("VoucherCodeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId");

                    b.HasIndex("VoucherCodeId");

                    b.ToTable("VoucherCodeApplicationUsers");
                });

            modelBuilder.Entity("IMP.Domain.Entities.VoucherTransaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Order")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrderCode")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime>("OrderCreated")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("TotalDiscount")
                        .HasColumnType("decimal(18,6)");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,6)");

                    b.Property<int>("VoucherCodeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VoucherCodeId");

                    b.ToTable("VoucherTransactions");
                });

            modelBuilder.Entity("IMP.Domain.Entities.Wallet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ApplicationUserId")
                        .HasColumnType("int");

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(18,6)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId")
                        .IsUnique()
                        .HasFilter("[ApplicationUserId] IS NOT NULL");

                    b.ToTable("Wallets");
                });

            modelBuilder.Entity("IMP.Domain.Entities.WalletTransaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,6)");

                    b.Property<int?>("BankId")
                        .HasColumnType("int");

                    b.Property<string>("BankTranNo")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Evidences")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Note")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime>("PayDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("ReceiverBalance")
                        .HasColumnType("decimal(18,6)");

                    b.Property<int?>("ReceiverId")
                        .HasColumnType("int");

                    b.Property<decimal?>("SenderBalance")
                        .HasColumnType("decimal(18,6)");

                    b.Property<int?>("SenderId")
                        .HasColumnType("int");

                    b.Property<string>("TransactionInfo")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("TransactionStatus")
                        .HasColumnType("int");

                    b.Property<int>("TransactionType")
                        .HasColumnType("int");

                    b.Property<string>("VnpTransactionNo")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int?>("WalletFromId")
                        .HasColumnType("int");

                    b.Property<int?>("WalletToId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BankId");

                    b.HasIndex("ReceiverId");

                    b.HasIndex("SenderId");

                    b.HasIndex("WalletFromId");

                    b.HasIndex("WalletToId");

                    b.ToTable("WalletTransactions");
                });

            modelBuilder.Entity("IMP.Domain.Entities.ActivityComment", b =>
                {
                    b.HasOne("IMP.Domain.Entities.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("ApplicationUserId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("IMP.Domain.Entities.MemberActivity", null)
                        .WithMany("ActivityComments")
                        .HasForeignKey("MemberActivityId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("ApplicationUser");
                });

            modelBuilder.Entity("IMP.Domain.Entities.ApplicationUser", b =>
                {
                    b.HasOne("IMP.Domain.Entities.Brand", "Brand")
                        .WithMany()
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.ClientCascade);

                    b.HasOne("IMP.Domain.Entities.Location", "Location")
                        .WithMany("ApplicationUsers")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.ClientCascade);

                    b.Navigation("Brand");

                    b.Navigation("Location");
                });

            modelBuilder.Entity("IMP.Domain.Entities.Block", b =>
                {
                    b.HasOne("IMP.Domain.Entities.BlockType", "BlockType")
                        .WithMany("Blocks")
                        .HasForeignKey("BlockTypeId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("IMP.Domain.Entities.Page", "Page")
                        .WithMany("Blocks")
                        .HasForeignKey("PageId")
                        .OnDelete(DeleteBehavior.ClientCascade);

                    b.HasOne("IMP.Domain.Entities.Block", "Parent")
                        .WithMany("ChildBlocks")
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.ClientCascade);

                    b.Navigation("BlockType");

                    b.Navigation("Page");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("IMP.Domain.Entities.BlockItem", b =>
                {
                    b.HasOne("IMP.Domain.Entities.Block", null)
                        .WithMany("Items")
                        .HasForeignKey("BlockId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("IMP.Domain.Entities.Brand", b =>
                {
                    b.HasOne("IMP.Domain.Entities.Wallet", "Wallet")
                        .WithMany()
                        .HasForeignKey("WalletId")
                        .OnDelete(DeleteBehavior.ClientCascade);

                    b.Navigation("Wallet");
                });

            modelBuilder.Entity("IMP.Domain.Entities.Campaign", b =>
                {
                    b.HasOne("IMP.Domain.Entities.Brand", "Brand")
                        .WithMany()
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("IMP.Domain.Entities.CampaignType", "CampaignType")
                        .WithMany("Campaigns")
                        .HasForeignKey("CampaignTypeId")
                        .OnDelete(DeleteBehavior.ClientCascade);

                    b.HasOne("IMP.Domain.Entities.ApplicationUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("IMP.Domain.Entities.Platform", null)
                        .WithMany("Campaigns")
                        .HasForeignKey("PlatformId")
                        .OnDelete(DeleteBehavior.ClientCascade);

                    b.Navigation("Brand");

                    b.Navigation("CampaignType");

                    b.Navigation("CreatedBy");
                });

            modelBuilder.Entity("IMP.Domain.Entities.CampaignActivity", b =>
                {
                    b.HasOne("IMP.Domain.Entities.ActivityType", "ActivityType")
                        .WithMany("CampaignActivities")
                        .HasForeignKey("ActivityTypeId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("IMP.Domain.Entities.Campaign", "Campaign")
                        .WithMany("CampaignActivities")
                        .HasForeignKey("CampaignId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("IMP.Domain.Entities.EvidenceType", "EvidenceType")
                        .WithMany("CampaignActivities")
                        .HasForeignKey("EvidenceTypeId")
                        .OnDelete(DeleteBehavior.ClientCascade);

                    b.Navigation("ActivityType");

                    b.Navigation("Campaign");

                    b.Navigation("EvidenceType");
                });

            modelBuilder.Entity("IMP.Domain.Entities.CampaignImage", b =>
                {
                    b.HasOne("IMP.Domain.Entities.Campaign", null)
                        .WithMany("CampaignImages")
                        .HasForeignKey("CampaignId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("IMP.Domain.Entities.CampaignMember", b =>
                {
                    b.HasOne("IMP.Domain.Entities.ApplicationUser", "ApprovedBy")
                        .WithMany()
                        .HasForeignKey("ApprovedById")
                        .OnDelete(DeleteBehavior.ClientCascade);

                    b.HasOne("IMP.Domain.Entities.Campaign", "Campaign")
                        .WithMany("CampaignMembers")
                        .HasForeignKey("CampaignId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("IMP.Domain.Entities.ApplicationUser", "Influencer")
                        .WithMany()
                        .HasForeignKey("InfluencerId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("ApprovedBy");

                    b.Navigation("Campaign");

                    b.Navigation("Influencer");
                });

            modelBuilder.Entity("IMP.Domain.Entities.CampaignReward", b =>
                {
                    b.HasOne("IMP.Domain.Entities.Campaign", null)
                        .WithMany("CampaignRewards")
                        .HasForeignKey("CampaignId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("IMP.Domain.Entities.CampaignVoucher", null)
                        .WithMany("RewardVouchers")
                        .HasForeignKey("CampaignVoucherId")
                        .OnDelete(DeleteBehavior.ClientCascade);
                });

            modelBuilder.Entity("IMP.Domain.Entities.CampaignType", b =>
                {
                    b.HasOne("IMP.Domain.Entities.CampaignType", "Parent")
                        .WithMany("ChildCampaignTypes")
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.ClientCascade);

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("IMP.Domain.Entities.CampaignVoucher", b =>
                {
                    b.HasOne("IMP.Domain.Entities.Campaign", "Campaign")
                        .WithMany("Vouchers")
                        .HasForeignKey("CampaignId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("IMP.Domain.Entities.Voucher", "Voucher")
                        .WithMany("CampaignVouchers")
                        .HasForeignKey("VoucherId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("Campaign");

                    b.Navigation("Voucher");
                });

            modelBuilder.Entity("IMP.Domain.Entities.Complaint", b =>
                {
                    b.HasOne("IMP.Domain.Entities.Campaign", "Campaign")
                        .WithMany("Complaints")
                        .HasForeignKey("CampaignId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("IMP.Domain.Entities.ApplicationUser", "FeedbackUser")
                        .WithMany()
                        .HasForeignKey("FeedbackUserId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("IMP.Domain.Entities.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("Campaign");

                    b.Navigation("FeedbackUser");

                    b.Navigation("User");
                });

            modelBuilder.Entity("IMP.Domain.Entities.Evidence", b =>
                {
                    b.HasOne("IMP.Domain.Entities.EvidenceType", "EvidenceType")
                        .WithMany("Evidences")
                        .HasForeignKey("EvidenceTypeId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("IMP.Domain.Entities.MemberActivity", "MemberActivity")
                        .WithMany("Evidences")
                        .HasForeignKey("MemberActivityId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("EvidenceType");

                    b.Navigation("MemberActivity");
                });

            modelBuilder.Entity("IMP.Domain.Entities.InfluencerConfiguration", b =>
                {
                    b.HasOne("IMP.Domain.Entities.Campaign", null)
                        .WithOne("InfluencerConfiguration")
                        .HasForeignKey("IMP.Domain.Entities.InfluencerConfiguration", "CampaignId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("IMP.Domain.Entities.RankLevel", "RankLevel")
                        .WithMany()
                        .HasForeignKey("LevelId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("IMP.Domain.Entities.Platform", "Platform")
                        .WithMany()
                        .HasForeignKey("PlatformId")
                        .OnDelete(DeleteBehavior.ClientCascade);

                    b.Navigation("Platform");

                    b.Navigation("RankLevel");
                });

            modelBuilder.Entity("IMP.Domain.Entities.InfluencerConfigurationLocation", b =>
                {
                    b.HasOne("IMP.Domain.Entities.InfluencerConfiguration", null)
                        .WithMany("Locations")
                        .HasForeignKey("InfluencerConfigurationId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("IMP.Domain.Entities.Location", "Location")
                        .WithMany("InfluencerConfigurationLocations")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("Location");
                });

            modelBuilder.Entity("IMP.Domain.Entities.InfluencerPlatform", b =>
                {
                    b.HasOne("IMP.Domain.Entities.ApplicationUser", "Influencer")
                        .WithMany("InfluencerPlatforms")
                        .HasForeignKey("InfluencerId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("IMP.Domain.Entities.Platform", "Platform")
                        .WithMany("InfluencerPlatforms")
                        .HasForeignKey("PlatformId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("Influencer");

                    b.Navigation("Platform");
                });

            modelBuilder.Entity("IMP.Domain.Entities.Location", b =>
                {
                    b.HasOne("IMP.Domain.Entities.Location", "Parent")
                        .WithMany("Locations")
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.ClientCascade);

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("IMP.Domain.Entities.MemberActivity", b =>
                {
                    b.HasOne("IMP.Domain.Entities.CampaignActivity", "CampaignActivity")
                        .WithMany("MemberActivities")
                        .HasForeignKey("CampaignActivityId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("IMP.Domain.Entities.CampaignMember", "CampaignMember")
                        .WithMany("MemberActivities")
                        .HasForeignKey("CampaignMemberId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("CampaignActivity");

                    b.Navigation("CampaignMember");
                });

            modelBuilder.Entity("IMP.Domain.Entities.Notification", b =>
                {
                    b.HasOne("IMP.Domain.Entities.ApplicationUser", "ApplicationUser")
                        .WithMany("Notifications")
                        .HasForeignKey("ApplicationUserId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("ApplicationUser");
                });

            modelBuilder.Entity("IMP.Domain.Entities.Otp", b =>
                {
                    b.HasOne("IMP.Domain.Entities.ApplicationUser", null)
                        .WithMany("Otps")
                        .HasForeignKey("ApplicationUserId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("IMP.Domain.Entities.Page", b =>
                {
                    b.HasOne("IMP.Domain.Entities.ApplicationUser", "Influencer")
                        .WithMany("Pages")
                        .HasForeignKey("InfluencerId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("Influencer");
                });

            modelBuilder.Entity("IMP.Domain.Entities.PaymentInfor", b =>
                {
                    b.HasOne("IMP.Domain.Entities.Bank", "Bank")
                        .WithMany("PaymentInfors")
                        .HasForeignKey("BankId")
                        .OnDelete(DeleteBehavior.ClientCascade);

                    b.HasOne("IMP.Domain.Entities.ApplicationUser", "User")
                        .WithOne("PaymentInfor")
                        .HasForeignKey("IMP.Domain.Entities.PaymentInfor", "UserId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("Bank");

                    b.Navigation("User");
                });

            modelBuilder.Entity("IMP.Domain.Entities.Product", b =>
                {
                    b.HasOne("IMP.Domain.Entities.Campaign", null)
                        .WithMany("Products")
                        .HasForeignKey("CampaignId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("IMP.Domain.Entities.Ranking", b =>
                {
                    b.HasOne("IMP.Domain.Entities.ApplicationUser", "Influencer")
                        .WithOne("Ranking")
                        .HasForeignKey("IMP.Domain.Entities.Ranking", "InfluencerId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("IMP.Domain.Entities.RankLevel", "RankLevel")
                        .WithMany("Rankings")
                        .HasForeignKey("RankLevelId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("Influencer");

                    b.Navigation("RankLevel");
                });

            modelBuilder.Entity("IMP.Domain.Entities.TargetConfiguration", b =>
                {
                    b.HasOne("IMP.Domain.Entities.Campaign", null)
                        .WithOne("TargetConfiguration")
                        .HasForeignKey("IMP.Domain.Entities.TargetConfiguration", "CampaignId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("IMP.Domain.Entities.TargetConfigurationLocation", b =>
                {
                    b.HasOne("IMP.Domain.Entities.Location", "Location")
                        .WithMany("TargetCustomerConfigurations")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("IMP.Domain.Entities.TargetConfiguration", null)
                        .WithMany("Locations")
                        .HasForeignKey("TargetConfigurationId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("Location");
                });

            modelBuilder.Entity("IMP.Domain.Entities.Voucher", b =>
                {
                    b.HasOne("IMP.Domain.Entities.Brand", "Brand")
                        .WithMany()
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("Brand");
                });

            modelBuilder.Entity("IMP.Domain.Entities.VoucherCode", b =>
                {
                    b.HasOne("IMP.Domain.Entities.CampaignMember", "CampaignMember")
                        .WithMany("VoucherCodes")
                        .HasForeignKey("CampaignMemberId")
                        .OnDelete(DeleteBehavior.ClientCascade);

                    b.HasOne("IMP.Domain.Entities.Voucher", "Voucher")
                        .WithMany("VoucherCodes")
                        .HasForeignKey("VoucherId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("CampaignMember");

                    b.Navigation("Voucher");
                });

            modelBuilder.Entity("IMP.Domain.Entities.VoucherCodeApplicationUser", b =>
                {
                    b.HasOne("IMP.Domain.Entities.ApplicationUser", "ApplicationUser")
                        .WithMany("VoucherCodeApplicationUsers")
                        .HasForeignKey("ApplicationUserId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("IMP.Domain.Entities.VoucherCode", "VoucherCode")
                        .WithMany("VoucherCodeApplicationUsers")
                        .HasForeignKey("VoucherCodeId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("ApplicationUser");

                    b.Navigation("VoucherCode");
                });

            modelBuilder.Entity("IMP.Domain.Entities.VoucherTransaction", b =>
                {
                    b.HasOne("IMP.Domain.Entities.VoucherCode", "VoucherCode")
                        .WithMany("VoucherTransactions")
                        .HasForeignKey("VoucherCodeId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("VoucherCode");
                });

            modelBuilder.Entity("IMP.Domain.Entities.Wallet", b =>
                {
                    b.HasOne("IMP.Domain.Entities.ApplicationUser", null)
                        .WithOne("Wallet")
                        .HasForeignKey("IMP.Domain.Entities.Wallet", "ApplicationUserId")
                        .OnDelete(DeleteBehavior.ClientCascade);
                });

            modelBuilder.Entity("IMP.Domain.Entities.WalletTransaction", b =>
                {
                    b.HasOne("IMP.Domain.Entities.Bank", "Bank")
                        .WithMany()
                        .HasForeignKey("BankId")
                        .OnDelete(DeleteBehavior.ClientCascade);

                    b.HasOne("IMP.Domain.Entities.ApplicationUser", "Receiver")
                        .WithMany("TransactionsReceived")
                        .HasForeignKey("ReceiverId");

                    b.HasOne("IMP.Domain.Entities.ApplicationUser", "Sender")
                        .WithMany("TransactionsSent")
                        .HasForeignKey("SenderId");

                    b.HasOne("IMP.Domain.Entities.Wallet", "WalletFrom")
                        .WithMany("FromTransactions")
                        .HasForeignKey("WalletFromId");

                    b.HasOne("IMP.Domain.Entities.Wallet", "WalletTo")
                        .WithMany("ToTransactions")
                        .HasForeignKey("WalletToId");

                    b.Navigation("Bank");

                    b.Navigation("Receiver");

                    b.Navigation("Sender");

                    b.Navigation("WalletFrom");

                    b.Navigation("WalletTo");
                });

            modelBuilder.Entity("IMP.Domain.Entities.ActivityType", b =>
                {
                    b.Navigation("CampaignActivities");
                });

            modelBuilder.Entity("IMP.Domain.Entities.ApplicationUser", b =>
                {
                    b.Navigation("InfluencerPlatforms");

                    b.Navigation("Notifications");

                    b.Navigation("Otps");

                    b.Navigation("Pages");

                    b.Navigation("PaymentInfor");

                    b.Navigation("Ranking");

                    b.Navigation("TransactionsReceived");

                    b.Navigation("TransactionsSent");

                    b.Navigation("VoucherCodeApplicationUsers");

                    b.Navigation("Wallet");
                });

            modelBuilder.Entity("IMP.Domain.Entities.Bank", b =>
                {
                    b.Navigation("PaymentInfors");
                });

            modelBuilder.Entity("IMP.Domain.Entities.Block", b =>
                {
                    b.Navigation("ChildBlocks");

                    b.Navigation("Items");
                });

            modelBuilder.Entity("IMP.Domain.Entities.BlockType", b =>
                {
                    b.Navigation("Blocks");
                });

            modelBuilder.Entity("IMP.Domain.Entities.Campaign", b =>
                {
                    b.Navigation("CampaignActivities");

                    b.Navigation("CampaignImages");

                    b.Navigation("CampaignMembers");

                    b.Navigation("CampaignRewards");

                    b.Navigation("Complaints");

                    b.Navigation("InfluencerConfiguration");

                    b.Navigation("Products");

                    b.Navigation("TargetConfiguration");

                    b.Navigation("Vouchers");
                });

            modelBuilder.Entity("IMP.Domain.Entities.CampaignActivity", b =>
                {
                    b.Navigation("MemberActivities");
                });

            modelBuilder.Entity("IMP.Domain.Entities.CampaignMember", b =>
                {
                    b.Navigation("MemberActivities");

                    b.Navigation("VoucherCodes");
                });

            modelBuilder.Entity("IMP.Domain.Entities.CampaignType", b =>
                {
                    b.Navigation("Campaigns");

                    b.Navigation("ChildCampaignTypes");
                });

            modelBuilder.Entity("IMP.Domain.Entities.CampaignVoucher", b =>
                {
                    b.Navigation("RewardVouchers");
                });

            modelBuilder.Entity("IMP.Domain.Entities.EvidenceType", b =>
                {
                    b.Navigation("CampaignActivities");

                    b.Navigation("Evidences");
                });

            modelBuilder.Entity("IMP.Domain.Entities.InfluencerConfiguration", b =>
                {
                    b.Navigation("Locations");
                });

            modelBuilder.Entity("IMP.Domain.Entities.Location", b =>
                {
                    b.Navigation("ApplicationUsers");

                    b.Navigation("InfluencerConfigurationLocations");

                    b.Navigation("Locations");

                    b.Navigation("TargetCustomerConfigurations");
                });

            modelBuilder.Entity("IMP.Domain.Entities.MemberActivity", b =>
                {
                    b.Navigation("ActivityComments");

                    b.Navigation("Evidences");
                });

            modelBuilder.Entity("IMP.Domain.Entities.Page", b =>
                {
                    b.Navigation("Blocks");
                });

            modelBuilder.Entity("IMP.Domain.Entities.Platform", b =>
                {
                    b.Navigation("Campaigns");

                    b.Navigation("InfluencerPlatforms");
                });

            modelBuilder.Entity("IMP.Domain.Entities.RankLevel", b =>
                {
                    b.Navigation("Rankings");
                });

            modelBuilder.Entity("IMP.Domain.Entities.TargetConfiguration", b =>
                {
                    b.Navigation("Locations");
                });

            modelBuilder.Entity("IMP.Domain.Entities.Voucher", b =>
                {
                    b.Navigation("CampaignVouchers");

                    b.Navigation("VoucherCodes");
                });

            modelBuilder.Entity("IMP.Domain.Entities.VoucherCode", b =>
                {
                    b.Navigation("VoucherCodeApplicationUsers");

                    b.Navigation("VoucherTransactions");
                });

            modelBuilder.Entity("IMP.Domain.Entities.Wallet", b =>
                {
                    b.Navigation("FromTransactions");

                    b.Navigation("ToTransactions");
                });
#pragma warning restore 612, 618
        }
    }
}
